@page "/addspot"
@using Microsoft.AspNetCore.Authorization
@using System.ComponentModel.DataAnnotations
@using KansaiExplore.Data
@using KansaiExplore.Data.Shared
@using Microsoft.EntityFrameworkCore

@inject NavigationManager NavigationManager
@inject IDbContextFactory<DataContext> DbContextFactory
@attribute [Authorize]
<script src="leaflet.js"></script>
<PageTitle>スポットの追加</PageTitle>

<h3>スポットの追加</h3>
<div class="row">
    <section>
        <EditForm Model="SpotInput" FormName="addSpot" OnValidSubmit="Add">
            <div class="form-floating mb-3">
                <InputText @bind-Value="SpotInput.SpotName" class="form-control" aria-required="true"/>
                <label class="form-label" for="spot-name">スポットの名前</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="SpotInput.SpotDesc" class="form-control" aria-required="true"/>
                <label class="form-label" for="spot-desc">スポットの説明</label>
            </div>
            <div class="form-floating mb-3">
                <InputNumber @bind-Value="SpotInput.Latitude" class="form-control" aria-required="true"/>
                <label class="form-label">緯度</label>
            </div>
            <div class="form-floating mb-3">
                <InputNumber @bind-Value="SpotInput.Longitude" class="form-control" aria-required="true" />
                <label class="form-label">経度</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="SpotInput.Valuation" class="form-control"/>
                <label class="form-label">評価</label>
            </div>
            <div>
                <button type="submit" class="w-100 btn btn-primary">追加</button>
            </div>
        </EditForm>
    </section>
</div>

@code {
    [CascadingParameter]
    private HttpContent HttpContent { get; set; } = default!;
    [SupplyParameterFromForm]
    private SpotInputModel SpotInput { get; set; } = new();

    private async Task Add()
    {
        var spotData = new NicheSpot()
        {
            Id = Guid.NewGuid(),
            SpotName = SpotInput.SpotName,
            SpotDescription = SpotInput.SpotDesc,
            Choordinates = "23.4340, 135.22134",
            CreatedAt = DateTimeOffset.UtcNow,
            MediaUrl = "localhost/medias/16384",
            CreatedBy = Guid.NewGuid(),
            Longitude = SpotInput.Longitude,
            Latitude = SpotInput.Latitude,
            Valuation = SpotInput.Valuation
        };
        using var context = DbContextFactory.CreateDbContext();
        context.kansaispot.Add(spotData);
        await context.SaveChangesAsync();
        // using var dbFactory = DBFactory.CreateDbContext();
        // dbFactory.Add(spotData);
        NavigationManager.NavigateTo("/");
    }

    private sealed class SpotInputModel
    {
        [Required(ErrorMessage ="必須項目です")]
        public string SpotName { get; set; } = "";
        [Required(ErrorMessage = "必須項目です。")]
        public string SpotDesc { get; set; } = "";
        [Required(ErrorMessage ="必須項目です")]
        [Range(10, 360, ErrorMessage ="値が不正です。やり直してください。")]
        public double Longitude { get; set; } = 0;
        [Required(ErrorMessage ="必須項目です")]
        [Range(10, 360, ErrorMessage = "値が不正です。やり直してください。")]
        public double Latitude { get; set; } = 0;
        public string Valuation { get; set; } = "";
    }
}
